
"use client";

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { useToast } from '@/hooks/use-toast';
import ContentRenderer from './content-renderer';
import { Copy } from 'lucide-react';
import { Skeleton } from './ui/skeleton';
import { Textarea } from './ui/textarea';
import { Button } from './ui/button';

interface QuestionDisplayProps {
  baseQuestion: {
    id: string;
    text: string;
  };
  generatedQuestion: string | null;
  isLoading: boolean;
}

const LoadingSkeleton = () => (
    <Card className="mt-6">
        <CardHeader>
            <Skeleton className="h-6 w-1/2" />
        </CardHeader>
        <CardContent className="space-y-4">
            <Skeleton className="h-40 w-full" />
        </CardContent>
    </Card>
);

export default function QuestionDisplay({ baseQuestion, generatedQuestion, isLoading }: QuestionDisplayProps) {
  const { toast } = useToast();

  const handleCopy = () => {
    if (generatedQuestion) {
      navigator.clipboard.writeText(generatedQuestion);
      toast({
        title: 'Copied to clipboard!',
        description: 'The generated question has been copied.',
      });
    }
  };

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle>Base Question</CardTitle>
          <CardDescription>This is the question used as a base for generation.</CardDescription>
        </CardHeader>
        <CardContent>
          <ContentRenderer content={baseQuestion.text} />
        </CardContent>
      </Card>

      {isLoading && <LoadingSkeleton />}
      
      {generatedQuestion && !isLoading && (
        <Card className="fade-in">
          <CardHeader>
            <div className="flex justify-between items-center">
                <CardTitle>Generated Question</CardTitle>
                <Button variant="ghost" size="icon" onClick={handleCopy} disabled={!generatedQuestion}>
                    <Copy className="h-5 w-5" />
                </Button>
            </div>
            <CardDescription>This question was generated by AI based on the base question.</CardDescription>
          </CardHeader>
          <CardContent>
            <Textarea
              readOnly
              value={generatedQuestion}
              className="h-96 text-sm font-mono"
            />
          </CardContent>
        </Card>
      )}
    </div>
  );
}
